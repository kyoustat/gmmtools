% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diss_AW.R
\name{dissAW}
\alias{dissAW}
\title{Approximate 2-Wasserstein Distance}
\usage{
dissAW(gmmobj1, gmmobj2)
}
\arguments{
\item{gmmobj1}{first \code{gmm}-like object.}

\item{gmmobj2}{second \code{gmm}-like object.}
}
\value{
computed distance value.
}
\description{
The space of Gaussian distributions is Riemannian manifold under Wasserstein 
distance of order 2. GMM is considered as an empirical measure on the 
Riemannian manifold and distance between two GMMs is posed as a discrete 
optimal transport problem.
}
\examples{
\donttest{
# -------------------------------------------------------------
#                   Distance for Gaussian Mixtures
#
# Data 1 : use SMILEY data 'gensmiley()' function.
# Data 2 : SMILEY data is translated +3 and rotated.
# Data 3 : SMILEY data is translated +9 and rotated.
# -------------------------------------------------------------
## GENERATE DATA
#  set up
ndata = 10
ntot  = 3*ndata
rot   = qr.Q(qr(matrix(rnorm(4),ncol=2)))

#  generate
list_data = list()
for (i in 1:ndata){
  list_data[[i]]           = (T4cluster::gensmiley(n=150, sd=0.1)$data)
  list_data[[i+ndata]]     = (T4cluster::gensmiley(n=150, sd=0.1)$data)\%*\%rot + 3
  list_data[[i+(2*ndata)]] = (T4cluster::gensmiley(n=150, sd=0.1)$data)\%*\%rot + 9
}


## FIT GMM MODELS WITH K=4
list_gmm = list()
for (i in 1:ntot){
  list_gmm[[i]] = gmm(list_data[[i]], k=4)
}

## COMPUTE PAIRWISE DISTANCE
distL2 = array(0,c(ntot,ntot))
for (i in 1:(ntot-1)){
  gi = list_gmm[[i]]
  for (j in (i+1):ntot){
    gj = list_gmm[[j]]
    distL2[i,j] <- distL2[j,i] <- dissAW(gi, gj)
  }
}

## VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2), pty="s")
plot(list_data[[1]], main="SMILEY data", pch=19)
image(distL2[,ntot:1], axes=FALSE, col=gray((0:64)/64),
      main="Approximate 2-Wasserstein Distance")
par(opar)
}

}
\references{
\insertRef{chen_optimal_2019}{gmmtools}
}
\concept{diss}
