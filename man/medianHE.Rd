% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/merge_medianHE.R
\name{medianHE}
\alias{medianHE}
\title{Median of GMMs under Hilbert Embedding}
\usage{
medianHE(gmmlist, weight = NULL, theta = 1, ...)
}
\arguments{
\item{gmmlist}{list of \eqn{N} \code{gmmtools} S3 objects of \code{gmm}-type.}

\item{weight}{weight for each mixture model. If \code{NULL} (default), uniform weights are set.}

\item{theta}{bandwidth parameter (default: 1).}

\item{...}{extra parameters for iterative updates, including \describe{
\item{maxiter}{the number of iterations (default: 50).}
\item{abstol}{stopping criterion (default:1e-6).}
}}
}
\description{
Given multiple GMMs \eqn{P_1, P_2, \ldots, P_N}, geometric median induced 
by Hilbert embedding is defined as follows
\deqn{
\bar{P} = \underset{P}{\textrm{argmin}} \sum_{n=1}^N w_n d(P,P_n)
}
where \eqn{d(\cdot,\cdot)} is the distance in RKHS and \eqn{w_n}'s are nonnegative 
numbers that sum to 1. If you are interested in the distance itself, please 
see \code{\link{dissHE}}.
}
\examples{
# -------------------------------------------------------------
#                   Mixtures for SMILEY Data
#
# STEP 1. Generate 10 datasets with noise
# STEP 2. Fit GMM with varying number of components (k=3-9)
# STEP 3. Combine GMMs with uniform weights and Visualize
# -------------------------------------------------------------
# STEP 1. 10 datasets with noise
list_data = list()
for (i in 1:10){
  list_data[[i]] = T4cluster::gensmiley(sd=0.25)
}

# STEP 2. Fit GMM with varying k
list_gmm = list()
for (i in 1:10){
  list_gmm[[i]] = gmm(list_data[[i]]$data, k=sample(3:9, 1))
}

# STEP 3. Find Median of GMMs under Hilbert Embedding
medgmm1 = medianHE(list_gmm, theta=0.1)
medgmm2 = medianHE(list_gmm, theta=1)
medgmm3 = medianHE(list_gmm, theta=10)

# we use 'ggplot2' for visualization
# prepare grid and density evaluation
npts  = 250
pgrid = as.matrix(expand.grid(x=seq(from=-1.5,to=1.5,length.out=npts),
                                y=seq(from=-1.5,to=1.5,length.out=npts)))
prob1 = gmmdensity(pgrid, medgmm1)
prob2 = gmmdensity(pgrid, medgmm2)
prob3 = gmmdensity(pgrid, medgmm3)
  
obj1 = rbind(cbind(pgrid, prob1), cbind(pgrid, prob2), cbind(pgrid, prob3))
obj2 = as.factor(rep(c(1,2,3),each=(npts^2)))
odf  = data.frame(x=obj1[,1], y=obj1[,2], density=obj1[,3], class=obj2)
levels(odf$class) = c("theta=0.1","theta=1","theta=10")
  
\dontrun{
# plot
ggplot2::ggplot(odf, aes(x=x,y=y,z=density)) + 
  facet_grid(. ~ class) + 
  geom_raster(aes(fill=density)) + 
  geom_contour(colour="white") +
  scale_fill_viridis_c() +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  coord_fixed(xlim=c(-1.5,1.5), ylim=c(-1.5,1.5)) + 
  ggtitle("HE Median of 10 GMMs.")
}

}
\concept{merge}
