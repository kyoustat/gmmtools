% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reduction_gmr2021YS.R
\name{gmr2021YS}
\alias{gmr2021YS}
\title{GMM Reduction by You (2021) via Iterative Update}
\usage{
gmr2021YS(gmmobj, M = 2, merger = c("mmm", "wass2"), theta = 1)
}
\arguments{
\item{gmmobj}{\code{gmm}-like object of \eqn{N} components.}

\item{M}{the number of components for the reduced model.}

\item{merger}{name of the merging method, either \code{"mmm"} or \code{"wass2"}.}

\item{theta}{bandwidth parameter for kernel embedding (default: 1).}
}
\value{
\code{gmm}-like object of \eqn{M} components.
}
\description{
Given a GMM model with \eqn{N} components, where \eqn{N} is usually large, 
this function tries to find an approximation with \eqn{M \in [1,N)} components 
by iteratively merging two nearest components with respect to distance in 
the reproducing kernel Hilbert space. Two options of merge are available, \code{"mmm"} 
for moment-matching/preserving merge and \code{"wass2"} for 2-wasserstein barycenter.
}
\examples{
# -------------------------------------------------------------
#              Reduction of Mixture for SMILEY Data
#
# From multiple SMILEY data, we fit 10-component GMM for each 
# data and average of models is taken to give a GMM fit with 
# large number of redundant components.
# -------------------------------------------------------------
# Generate 20 datasets with noise and fix GMM 
list_gmm  = list()
for (i in 1:20){
  data_i = T4cluster::gensmiley(sd=0.25)$data
  list_gmm[[i]] = gmm(data_i, k=10)
}

# Find the average of models
gcenter = wsum(list_gmm)

# Do Reduction for M=1,3,9
gr1 = gmr2021YS(gcenter, M=1)
gr3 = gmr2021YS(gcenter, M=3)
gr9 = gmr2021YS(gcenter, M=9)

# prepare grid and density evaluation
npt   = 200
pgrid = as.matrix(expand.grid(x=seq(from=-1.5,to=1.5,length.out=npt),
                  y=seq(from=-1.5,to=1.5,length.out=npt)))
prob1 = gmmdensity(pgrid, gr1)
prob3 = gmmdensity(pgrid, gr3)
prob9 = gmmdensity(pgrid, gr9)
  
# wrap as a single dataframe
obj1 = rbind(cbind(pgrid, prob1), cbind(pgrid, prob3), cbind(pgrid, prob9))
obj2 = as.factor(rep(c(1,3,9),each=(npt^2)))
odf  = data.frame(x=obj1[,1], y=obj1[,2], density=obj1[,3], class=obj2)
levels(odf$class) = c("M=1","M=3","M=9")

\dontrun{
# visualize
ggplot2::ggplot(odf, aes(x=x,y=y,z=density)) + 
  facet_grid(. ~ class) + 
  geom_raster(aes(fill=density)) + 
  scale_fill_viridis_c() +
  geom_contour(colour="white") +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  coord_fixed(xlim=c(-1.5,1.5), ylim=c(-1.5,1.5)) + 
  ggtitle("Reduction of 200-Component GMM via You (2021).")
}   

}
\concept{reduction}
